<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_transform_script">
    <sys_transform_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <map display_value="CVRF Solution XML TM">05ba973f07713010568cffa08c1ed0ed</map>
        <order>100</order>
        <script><![CDATA[(function runTransformScript(source, map, log, target /*undefined onStart*/) {

	try {
		// Get the attachment from the datasource
		var dataSourceId = import_set.data_source.sys_id;
		var attachmentApi = new GlideSysAttachment();
		var attachmentGr = new GlideRecord("sys_attachment");
		attachmentGr.addQuery("table_name", "sys_data_source");
		attachmentGr.addQuery("table_sys_id", dataSourceId);
		attachmentGr.orderByDesc('sys_updated_on');
		attachmentGr.query();
		if (attachmentGr.next()) {
			// Find the integration record for this
			var importQueueEntryGR = new GlideRecord("sn_vul_ds_import_q_entry");
			importQueueEntryGR.addQuery("data_source", dataSourceId + "");
			importQueueEntryGR.addQuery("status", "PROCESSING");
			importQueueEntryGR.orderByDesc('sys_updated_on');
			importQueueEntryGR.query();
			if (importQueueEntryGR.next()) {
				var domain = importQueueEntryGR.getElement("integration_process.integration_run.integration").run_as.sys_domain + '';
				var src = importQueueEntryGR.getElement("integration_process.integration_run.integration").integration.source + '';
				var processId = importQueueEntryGR.getValue("integration_process");
				gs.info('domain : ' + domain + " src : " + src + " process ID : " + processId);
				// var processor = new CVRFSolutionProcessor(domain, src, processId);
				var processor = new CVRFSolutionProcessor(domain, src, processId);
				gs.info('object created' + attachmentGr);
				processor.process(attachmentGr);
				gs.info('function called');
			} else {
				gs.warn("MSRC transform: Unable to find an import queue entry");
			}
		} else {
			gs.warn("MSRC transform: Unable to find the attachment");
		}

	} catch (e) {
		gs.error('Exception in oncomplete script of TM2 : ' + e);
	}
})(source, map, log, target);]]></script>
        <sys_class_name>sys_transform_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-13 06:56:16</sys_created_on>
        <sys_id>600b177f07713010568cffa08c1ed050</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>onComplete</sys_name>
        <sys_package display_value="CVRF Integration for Security Operations" source="x_440354_cvrf_inte">65c6033f07313010568cffa08c1ed041</sys_package>
        <sys_policy/>
        <sys_scope display_value="CVRF Integration for Security Operations">65c6033f07313010568cffa08c1ed041</sys_scope>
        <sys_update_name>sys_transform_script_600b177f07713010568cffa08c1ed050</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-16 10:24:34</sys_updated_on>
        <when>onComplete</when>
    </sys_transform_script>
</record_update>
